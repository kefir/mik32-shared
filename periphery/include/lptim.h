#ifndef LPTIM_H_INCLUDED
#define LPTIM_H_INCLUDED

#define LPTIM_SYNC_TICKS 2

#define LPTIM_ISR 0x00
#define LPTIM_IT_CMPM_BIT 0
#define LPTIM_IT_ARRM_BIT 1
#define LPTIM_IT_EXT_BIT 2
#define LPTIM_IT_CMPOK_BIT 3
#define LPTIM_IT_ARROK_BIT 4
#define LPTIM_IT_UP_BIT 5
#define LPTIM_IT_DOWN_BIT 6

#define LPTIM_ISR_CMPM (0x1 << LPTIM_IT_CMPM_BIT)
#define LPTIM_ISR_ARRM (0x1 << LPTIM_IT_ARRM_BIT)
#define LPTIM_ISR_EXT (0x1 << LPTIM_IT_EXT_BIT)
#define LPTIM_ISR_CMPOK (0x1 << LPTIM_IT_CMPOK_BIT)
#define LPTIM_ISR_ARROK (0x1 << LPTIM_IT_ARROK_BIT)
#define LPTIM_ISR_UP (0x1 << LPTIM_IT_UP)
#define LPTIM_ISR_DOWN (0x1 << LPTIM_IT_DOWN_BIT)

#define LPTIM_ICR 0x04
#define LPTIM_ICR_CMPM (0x1 << LPTIM_IT_CMPM_BIT)
#define LPTIM_ICR_ARRM (0x1 << LPTIM_IT_ARRM_BIT)
#define LPTIM_ICR_EXT (0x1 << LPTIM_IT_EXT_BIT)
#define LPTIM_ICR_CMPOK (0x1 << LPTIM_IT_CMPOK_BIT)
#define LPTIM_ICR_ARROK (0x1 << LPTIM_IT_ARROK_BIT)
#define LPTIM_ICR_UP (0x1 << LPTIM_IT_UP)
#define LPTIM_ICR_DOWN (0x1 << LPTIM_IT_DOWN_BIT)

#define LPTIM_IER 0x08
#define LPTIM_IER_CMPM (0x1 << LPTIM_IT_CMPM_BIT)
#define LPTIM_IER_ARRM (0x1 << LPTIM_IT_ARRM_BIT)
#define LPTIM_IER_EXT (0x1 << LPTIM_IT_EXT_BIT)
#define LPTIM_IER_CMPOK (0x1 << LPTIM_IT_CMPOK_BIT)
#define LPTIM_IER_ARROK (0x1 << LPTIM_IT_ARROK_BIT)
#define LPTIM_IER_UP (0x1 << LPTIM_IT_UP)
#define LPTIM_IER_DOWN (0x1 << LPTIM_IT_DOWN_BIT)

#define LPTIM_CFGR 0x0C
#define LPTIM_CFGR_ENC_BIT 24
#define LPTIM_CFGR_COUNTMODE_BIT 23
#define LPTIM_CFGR_PRELOAD_BIT 22
#define LPTIM_CFGR_WAVPOL_BIT 21
#define LPTIM_CFGR_WAVE_BIT 20
#define LPTIM_CFGR_TIMOUT_BIT 19
#define LPTIM_CFGR_TRIGEN_BIT 17
#define LPTIM_CFGR_TRIGSEL_BIT 13
#define LPTIM_CFGR_PRESCALER_BIT 9
#define LPTIM_CFGR_TRGFLT_BIT 6
#define LPTIM_CFGR_CKFLT_BIT 3
#define LPTIM_CFGR_CKPOL_BIT 1
#define LPTIM_CFGR_CKSEL_BIT 0

#define LPTIM_CFGR_ENC (0x1 << LPTIM_CFGR_ENC_BIT)
#define LPTIM_CFGR_COUNTMODE (1 << LPTIM_CFGR_COUNTMODE_BIT)
#define LPTIM_CFGR_PRELOAD (1 << LPTIM_CFGR_PRELOAD_BIT)
#define LPTIM_CFGR_WAVPOL (1 << LPTIM_CFGR_WAVPOL_BIT)
#define LPTIM_CFGR_WAVE (1 << LPTIM_CFGR_WAVE_BIT)
#define LPTIM_CFGR_TIMOUT (1 << LPTIM_CFGR_TIMOUT_BIT)
#define LPTIM_CFGR_TRIGEN (0x3 << LPTIM_CFGR_TRIGEN_BIT)
#define LPTIM_CFGR_TRIGSEL (0x7 << LPTIM_CFGR_TRIGSEL_BIT)

#define LPTIM_CFGR_PSC1 (0x0 << LPTIM_CFGR_PRESCALER_BIT)
#define LPTIM_CFGR_PSC2 (0x1 << LPTIM_CFGR_PRESCALER_BIT)
#define LPTIM_CFGR_PSC4 (0x2 << LPTIM_CFGR_PRESCALER_BIT)
#define LPTIM_CFGR_PSC8 (0x3 << LPTIM_CFGR_PRESCALER_BIT)
#define LPTIM_CFGR_PSC16 (0x4 << LPTIM_CFGR_PRESCALER_BIT)
#define LPTIM_CFGR_PSC32 (0x5 << LPTIM_CFGR_PRESCALER_BIT)
#define LPTIM_CFGR_PSC64 (0x6 << LPTIM_CFGR_PRESCALER_BIT)
#define LPTIM_CFGR_PSC128 (0x7 << LPTIM_CFGR_PRESCALER_BIT)

#define LPTIM_CFGR_TRGFLT_DISABLE (0x0 << LPTIM_CFGR_TRGFLT_BIT)
#define LPTIM_CFGR_TRGFLT2 (0x1 << LPTIM_CFGR_TRGFLT_BIT)
#define LPTIM_CFGR_TRGFLT4 (0x2 << LPTIM_CFGR_TRGFLT_BIT)
#define LPTIM_CFGR_TRGFLT8 (0x3 << LPTIM_CFGR_TRGFLT_BIT)

#define LPTIM_CFGR_CKFLT_DISABLE (0x0 << LPTIM_CFGR_CKFLT_BIT)
#define LPTIM_CFGR_CKFLT2 (0x1 << LPTIM_CFGR_CKFLT_BIT)
#define LPTIM_CFGR_CKFLT4 (0x2 << LPTIM_CFGR_CKFLT_BIT)
#define LPTIM_CFGR_CKFLT8 (0x3 << LPTIM_CFGR_CKFLT_BIT)

#define LPTIM_CFGR_CKPOL_RISING (0x0 << LPTIM_CFGR_CKPOL_BIT)
#define LPTIM_CFGR_CKPOL_FALLING (0x1 << LPTIM_CFGR_CKPOL_BIT)
#define LPTIM_CFGR_CKPOL_ANY (0x2 << LPTIM_CFGR_CKPOL_BIT)

#define LPTIM_CFGR_CKSEL_INT (0x0 << LPTIM_CFGR_CKSEL_BIT)
#define LPTIM_CFGR_CKSEL_EXT (0x1 << LPTIM_CFGR_CKSEL_BIT)

#define LPTIM_CR 0x10

#define LPTIM_CR_ENABLE_BIT 0
#define LPTIM_CR_CNTSTRT_BIT 1
#define LPTIM_CR_SNGSTRT_BIT 2

#define LPTIM_CR_ENABLE (1 << LPTIM_CR_ENABLE_BIT)
#define LPTIM_CR_CNTSTRT (1 << LPTIM_CR_CNTSTRT_BIT)
#define LPTIM_CR_SNGSTRT (1 << LPTIM_CR_SNGSTRT_BIT)

#define LPTIM_CMP 0x14

#define LPTIM_ARR 0x18

#define LPTIM_CNT 0x1C

#ifndef _ASSEMBLER_
#include <inttypes.h>

typedef struct
{
    volatile uint32_t ISR;
    volatile uint32_t ICR;
    volatile uint32_t IER;
    volatile uint32_t CFGR;
    volatile uint32_t CR;
    volatile uint32_t CMP;
    volatile uint32_t ARR;
    volatile uint32_t CNT;
} LPTIM_TypeDef;
#endif

#endif // LPTIM_H_INCLUDED
