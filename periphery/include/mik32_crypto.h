#ifndef CRYPTO_H_INCLUDED
#define CRYPTO_H_INCLUDED

#define CRYPTO_CONFIG_DECODE_BIT 0
#define CRYPTO_CONFIG_CORE_SEL_BIT 1
#define CRYPTO_CONFIG_MODE_SEL_BIT 3
#define CRYPTO_CONFIG_SWAP_MODE_BIT 5
#define CRYPTO_CONFIG_ORDER_MODE_BIT 7
#define CRYPTO_CONFIG_C_RESET_BIT 8
#define CRYPTO_CONFIG_READY_BIT 9
#define CRYPTO_CONFIG_WRITE_STATUS_BIT 10
#define CRYPTO_CONFIG_READ_STATUS_BIT 11

#define CRYPTO_CONFIG_ENCODE (0 << CRYPTO_CONFIG_DECODE_BIT)
#define CRYPTO_CONFIG_DECODE (1 << CRYPTO_CONFIG_DECODE_BIT)
#define CRYPTO_CONFIG_CORE_SEL (0x3 << CRYPTO_CONFIG_CORE_SEL_BIT)
#define CRYPTO_CONFIG_CORE_SEL_KUZNECHIK (0x0 << CRYPTO_CONFIG_CORE_SEL_BIT)
#define CRYPTO_CONFIG_CORE_SEL_MAGMA (0x1 << CRYPTO_CONFIG_CORE_SEL_BIT)
#define CRYPTO_CONFIG_CORE_SEL_AES (0x2 << CRYPTO_CONFIG_CORE_SEL_BIT)
#define CRYPTO_CONFIG_MODE_SEL (0x3 << CRYPTO_CONFIG_MODE_SEL_BIT)
#define CRYPTO_CONFIG_MODE_SEL_ECB (0x0 << CRYPTO_CONFIG_MODE_SEL_BIT)
#define CRYPTO_CONFIG_MODE_SEL_CBC (0x1 << CRYPTO_CONFIG_MODE_SEL_BIT)
#define CRYPTO_CONFIG_MODE_SEL_CTR (0x2 << CRYPTO_CONFIG_MODE_SEL_BIT)
#define CRYPTO_CONFIG_SWAP_MODE (0x3 << CRYPTO_CONFIG_SWAP_MODE_BIT)
#define CRYPTO_CONFIG_SWAP_MODE_NONE (0x0 << CRYPTO_CONFIG_SWAP_MODE_BIT)
#define CRYPTO_CONFIG_SWAP_MODE_HALF_WORD (0x1 << CRYPTO_CONFIG_SWAP_MODE_BIT)
#define CRYPTO_CONFIG_SWAP_MODE_BYTE (0x2 << CRYPTO_CONFIG_SWAP_MODE_BIT)
#define CRYPTO_CONFIG_SWAP_MODE_BITS (0x3 << CRYPTO_CONFIG_SWAP_MODE_BIT)
#define CRYPTO_CONFIG_ORDER_MODE (1 << CRYPTO_CONFIG_ORDER_MODE_BIT)
#define CRYPTO_CONFIG_ORDER_MODE_LSW (0 << CRYPTO_CONFIG_ORDER_MODE_BIT)
#define CRYPTO_CONFIG_ORDER_MODE_MSW (1 << CRYPTO_CONFIG_ORDER_MODE_BIT)
#define CRYPTO_CONFIG_C_RESET_M (1 << CRYPTO_CONFIG_C_RESET_BIT)
#define CRYPTO_CONFIG_READY (1 << CRYPTO_CONFIG_READY_BIT)
#define CRYPTO_CONFIG_WRITE_STATUS (1 << CRYPTO_CONFIG_WRITE_STATUS_BIT)
#define CRYPTO_CONFIG_READ_STATUS (1 << CRYPTO_CONFIG_READ_STATUS_BIT)

#ifndef _ASSEMBLER_
#include <inttypes.h>

typedef struct
{
    volatile uint32_t BLOCK;
    volatile uint32_t KEY;
    volatile uint32_t INIT;
    volatile uint32_t CONFIG;
} CRYPTO_TypeDef;
#endif

#endif // CRYPTO_H_INCLUDED
